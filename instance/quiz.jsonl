{"question":"Apa library Python yang paling umum digunakan untuk machine learning dengan dukungan komunitas besar?","option_a":"TensorFlow","option_b":"PyTorch","option_c":"scikit-learn","option_d":"Keras","correct_option":"C"}
{"question":"Fungsi apa dalam scikit-learn yang digunakan untuk membagi data menjadi training dan testing?","option_a":"split_data()","option_b":"train_test_split()","option_c":"divide_dataset()","option_d":"separate_data()","correct_option":"B"}
{"question":"Apa yang dilakukan fungsi predict() pada model machine learning?","option_a":"Melatih model dengan data baru","option_b":"Membuat prediksi menggunakan model yang sudah dilatih","option_c":"Mengevaluasi akurasi model","option_d":"Menyimpan model ke file","correct_option":"B"}
{"question":"Library Python manakah yang khusus digunakan untuk deep learning dan neural networks?","option_a":"Pandas","option_b":"NumPy","option_c":"TensorFlow","option_d":"Matplotlib","correct_option":"C"}
{"question":"Apa fungsi dari preprocessing data sebelum training model AI?","option_a":"Mempercepat waktu kompilasi Python","option_b":"Meningkatkan konsistensi dan performa model","option_c":"Mengurangi ukuran file dataset","option_d":"Mengubah bahasa program","correct_option":"B"}
{"question":"Metode evaluasi manakah yang TIDAK digunakan untuk classification model?","option_a":"Accuracy Score","option_b":"Confusion Matrix","option_c":"Mean Squared Error","option_d":"Classification Report","correct_option":"C"}
{"question":"Apa keuntungan menggunakan pipeline dalam scikit-learn?","option_a":"Mempercepat waktu training model","option_b":"Mengotomatiskan workflow preprocessing dan modeling","option_c":"Mengurangi penggunaan memory","option_d":"Menambah akurasi model","correct_option":"B"}
{"question":"Dalam konteks MLOps, apa tujuan utama dari version control untuk model AI?","option_a":"Mengurangi biaya cloud computing","option_b":"Melacak perubahan dan reproduktibilitas model","option_c":"Mempercepat waktu inference","option_d":"Meningkatkan akurasi model","correct_option":"B"}
{"question": "Lengkapi kode untuk menyimpan model menggunakan joblib: ---CODE---import joblib\njoblib.______(model, 'model_ai.pkl')", "option_a": "save", "option_b": "dump", "option_c": "store", "option_d": "write", "correct_option": "B"}
{"question": "Lengkapi kode normalisasi data dengan StandardScaler: ---CODE---from sklearn.preprocessing import ______\nscaler = ______()\nX_train = scaler.______(X_train)", "option_a": "StandardScaler, StandardScaler, normalize", "option_b": "Normalizer, Normalizer, transform", "option_c": "StandardScaler, StandardScaler, fit_transform", "option_d": "Scaler, Scaler, process", "correct_option": "C"}
{"question": "Lengkapi kode untuk memuat dataset menggunakan scikit-learn: ---CODE---from sklearn import ______\niris = ______.load_iris()", "option_a": "datasets, datasets", "option_b": "model, model", "option_c": "data, data", "option_d": "learning, learning", "correct_option": "A"}
{"question": "Lengkapi kode training model SVM: ---CODE---from sklearn.svm import ______\nmodel = ______()\nmodel.______(X_train, y_train)", "option_a": "SVC, SVC, train", "option_b": "SVM, SVM, fit", "option_c": "SVC, SVC, fit", "option_d": "SupportVector, SupportVector, train", "correct_option": "C"}
{"question": "Lengkapi kode untuk memuat model yang sudah disimpan: ---CODE---model = joblib.______('model_ai.pkl')", "option_a": "load", "option_b": "open", "option_c": "read", "option_d": "import", "correct_option": "A"}
{"question": "Lengkapi kode untuk menghitung akurasi model: ---CODE---from sklearn.metrics import ______\naccuracy = ______(y_test, y_pred)", "option_a": "accuracy_score, accuracy_score", "option_b": "score, score", "option_c": "accuracy, accuracy", "option_d": "evaluation, evaluation", "correct_option": "A"}
{"question": "Lengkapi kode untuk membuat pipeline: ---CODE---from sklearn.pipeline import ______\nfrom sklearn.ensemble import RandomForestClassifier\n\npipeline = ______([\n    ('scaler', StandardScaler()),\n    ('classifier', ______())\n])", "option_a": "Pipeline, Pipeline, RandomForestClassifier", "option_b": "Pipe, Pipe, RandomForest", "option_c": "ModelPipeline, ModelPipeline, RFC", "option_d": "SKPipeline, SKPipeline, RandomForestClassifier", "correct_option": "A"}